package com.richrelevance.recommendations;

import com.richrelevance.ClientConfiguration;
import com.richrelevance.internal.net.WebResponse;
import com.richrelevance.utils.ValueMap;

import org.json.JSONObject;

import java.util.Collection;

public class PlacementsPersonalizeBuilder extends PlacementsBuilder<PlacementPersonalizeResponseInfo, PlacementsPersonalizeBuilder> {
    public static class Keys {

        public static final String ATTRIBUTES = "attribute";
        public static final String CUSTOM_ATTRIBUTES = "attribute";
        public static final String CART_VALUE_CENTS = "cv";
        public static final String EXTERNAL_CATEGORY_IDS = "cis";
        public static final String CATEGORY_NAME = "cn";
        public static final String SPOOF = "spoof";
        public static final String EMAIL_CAMPAIGN_ID = "cpi";
        public static final String NUM_RECOMMENDATIONS_LIMIT = "recProductsCount";
        public static final String USE_COOKIE = "useCookie";
    }

    public PlacementsPersonalizeBuilder() {
        excludeHtml(true);
    }

    /**
     * Sets custom attribute parameters.
     * Specify this parameter multiple times to request more than one attribute.
     *
     * @param attributes The attributes to retrieve.
     * @return This builder for chaining method calls
     */
    public PlacementsPersonalizeBuilder setCustomAttributes(String... attributes) {
        setListParameterFlat(Keys.ATTRIBUTES, attributes);
        return this;
    }

    /**
     * Sets custom attribute parameters.
     * Specify this parameter multiple times to request more than one attribute.
     *
     * @param attributes The attributes to retrieve.
     * @return This builder for chaining method calls
     */
    public PlacementsPersonalizeBuilder setCustomAttributes(Collection<String> attributes) {
        setListParameterFlat(Keys.ATTRIBUTES, attributes);
        return this;
    }

    /**
     * Sets custom attribute parameters. Specify this parameter multiple times to request more than one attribute.
     *
     * @param attributes The map of attributes to set.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setCustomAttributes(ValueMap<String> attributes) {
        setValueMapParameter(Keys.CUSTOM_ATTRIBUTES, attributes);
        return this;
    }

    /**
     * Sets a cart value string, used for cart-value-targeted campaigns.
     *
     * @param cartValueCents Cart value expressed in cents.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setCartValue(String cartValueCents) {
        setParameter(Keys.CART_VALUE_CENTS, cartValueCents);
        return this;
    }

    /**
     * Sets external category IDs. Used to pass category context information. For the category_page, the expected value
     * is a single external category ID.
     *
     * @param categoryId The external category IDs to set.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setExternalCategoryIds(String... categoryId) {
        setListParameter(Keys.EXTERNAL_CATEGORY_IDS, categoryId);
        return this;
    }

    /**
     * Sets external category IDs. Used to pass category context information. For the category_page, the expected value
     * is a single external category ID.
     *
     * @param categoryId The external category IDs to set.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setExternalCategoryIds(Collection<String> categoryId) {
        setListParameter(Keys.EXTERNAL_CATEGORY_IDS, categoryId);
        return this;
    }

    /**
     * Sets a category name string.
     *
     * @param categoryName Category name.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setCategoryName(String categoryName) {
        setParameter(Keys.CATEGORY_NAME, categoryName);
        return this;
    }

    /**
     * Sets a spoof string.
     *
     * @param spoof spoof string generated by RichPreview.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setSpoof(String spoof) {
        setParameter(Keys.SPOOF, spoof);
        return this;
    }

    /**
     * Sets a email campaign ID string.
     *
     * @param emailCampaignId The email campaign ID to set. Can be any alphanumeric string.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setEmailCampaignId(String emailCampaignId) {
        setParameter(Keys.EMAIL_CAMPAIGN_ID, emailCampaignId);
        return this;
    }

    /**
     * Sets the upper limit on the number of recommendations returned from each strategy. Default=5, Max=~ 20
     *
     * @param num The upper limit of recommendations to return.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setNumRecommendationsLimit(int num) {
        setParameter(Keys.NUM_RECOMMENDATIONS_LIMIT, num);
        return this;
    }

    /**
     * Sets a use cookie string that indicates whether to use recently viewed product information from the RR cookie as
     * a basis for recommendations along with the manually given ones.
     *
     * @param useCookie Boolean as a string to indicate cooke use. Default is yes.
     * @return This builder for chaining method calls.
     */
    public PlacementsPersonalizeBuilder setUseCookie(Boolean useCookie) {
        setParameter(Keys.USE_COOKIE, useCookie);
        return this;
    }

    @Override
    protected PlacementPersonalizeResponseInfo createNewResult() {
        return new PlacementPersonalizeResponseInfo();
    }

    @Override
    protected String getEndpointPath(ClientConfiguration configuration) {
        return "rrserver/api/personalize";
    }

    @Override
    protected void populateResponse(WebResponse response, JSONObject json, PlacementPersonalizeResponseInfo responseInfo) {
        PersonalizeParser.parsePlacementResponseInfo(json, responseInfo);
    }
}
